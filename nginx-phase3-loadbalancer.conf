# PHASE 3: NGINX LOAD BALANCER CONFIGURATION
# High-performance load balancing for Node.js backend services

# UPSTREAM DEFINITIONS - Load Balanced Backend Services
upstream main_api_cluster {
    least_conn;  # Load balancing method
    
    # Main API servers (port 3000 cluster)
    server 127.0.0.1:3000 max_fails=3 fail_timeout=30s weight=3;
    server 127.0.0.1:3010 max_fails=3 fail_timeout=30s weight=3 backup;
    server 127.0.0.1:3020 max_fails=3 fail_timeout=30s weight=2 backup;
    
    # Health check and keepalive
    keepalive 64;
    keepalive_requests 1000;
    keepalive_timeout 60s;
}

upstream rag_server_cluster {
    least_conn;
    
    # RAG servers (port 3001 cluster)
    server 127.0.0.1:3001 max_fails=3 fail_timeout=30s weight=3;
    server 127.0.0.1:3011 max_fails=3 fail_timeout=30s weight=3 backup;
    server 127.0.0.1:3021 max_fails=3 fail_timeout=30s weight=2 backup;
    
    keepalive 32;
    keepalive_requests 500;
    keepalive_timeout 60s;
}

upstream proxy_server_cluster {
    least_conn;
    
    # Proxy servers (port 3002 cluster)
    server 127.0.0.1:3002 max_fails=3 fail_timeout=30s weight=3;
    server 127.0.0.1:3012 max_fails=3 fail_timeout=30s weight=3 backup;
    server 127.0.0.1:3022 max_fails=3 fail_timeout=30s weight=2 backup;
    
    keepalive 32;
    keepalive_requests 500;
    keepalive_timeout 60s;
}

# GLOBAL NGINX OPTIMIZATIONS FOR SCALING
worker_processes auto;
worker_connections 8192;  # Increased from 4096
worker_rlimit_nofile 16384;

events {
    use epoll;
    multi_accept on;
    accept_mutex off;
}

# HTTP BLOCK WITH LOAD BALANCING
http {
    # PERFORMANCE OPTIMIZATIONS
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    
    # GZIP COMPRESSION
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # PHASE 3 CACHING ZONES (Enhanced)
    proxy_cache_path /var/cache/nginx/api levels=1:2 
                     keys_zone=api_cache:100m max_size=1g 
                     inactive=60m use_temp_path=off;
                     
    proxy_cache_path /var/cache/nginx/static levels=1:2 
                     keys_zone=static_cache:200m max_size=2g 
                     inactive=24h use_temp_path=off;

    # RATE LIMITING (Relaxed for load balanced environment)
    limit_req_zone $binary_remote_addr zone=api_limit:20m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=asset_limit:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=sse_limit:5m rate=10r/s;

    # LOAD BALANCER HEALTH MONITORING
    upstream_conf;
    
    # REAL IP EXTRACTION (for CloudFlare CDN)
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    real_ip_header CF-Connecting-IP;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # LOGGING WITH LOAD BALANCER INFO
    log_format load_balanced '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           'upstream: $upstream_addr '
                           'response_time: $upstream_response_time '
                           'cache: $upstream_cache_status';

    access_log /var/log/nginx/access.log load_balanced;
    error_log /var/log/nginx/error.log warn;

    # MAIN SERVER BLOCK
    server {
        listen 80;
        listen [::]:80;
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        
        server_name sentientm.com www.sentientm.com;
        root /var/www/sentientm/dist;
        index index.html;

        # SSL CONFIGURATION
        ssl_certificate /etc/letsencrypt/live/sentientm.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/sentientm.com/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # SECURITY HEADERS
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Load-Balancer "nginx-phase3" always;

        # HEALTH CHECK ENDPOINT
        location = /nginx-health {
            access_log off;
            return 200 "nginx-loadbalancer-healthy\n";
            add_header Content-Type text/plain;
        }

        # LOAD BALANCER STATUS
        location = /lb-status {
            access_log off;
            allow 127.0.0.1;
            deny all;
            stub_status on;
        }

        # RAG SERVER ENDPOINTS (Load Balanced)
        location /api/rag/ {
            limit_req zone=api_limit burst=10 nodelay;
            
            proxy_pass http://rag_server_cluster;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Load balancer specific headers
            proxy_set_header X-Load-Balanced "rag-cluster";
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Caching for RAG responses
            proxy_cache api_cache;
            proxy_cache_valid 200 5m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # MAIN API ENDPOINTS (Load Balanced)
        location /api/ {
            limit_req zone=api_limit burst=15 nodelay;
            
            proxy_pass http://main_api_cluster;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Load balancer specific headers
            proxy_set_header X-Load-Balanced "main-api-cluster";
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Smart caching based on endpoint
            proxy_cache api_cache;
            proxy_cache_valid 200 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            add_header X-Cache-Status $upstream_cache_status;
            add_header X-Upstream-Server $upstream_addr;
        }

        # PROXY SERVER ENDPOINTS (Load Balanced)
        location ~* ^/(api/)?(proxy-image|r2-image) {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://proxy_server_cluster;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Load balancer for image proxy
            proxy_set_header X-Load-Balanced "proxy-cluster";
            proxy_next_upstream error timeout http_500 http_502 http_503;
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Image caching
            proxy_cache static_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            add_header X-Cache-Status $upstream_cache_status;
            add_header Cache-Control "public, max-age=3600";
        }

        # SSE ENDPOINTS (Sticky sessions for real-time)
        location /events/ {
            limit_req zone=sse_limit burst=5 nodelay;
            
            proxy_pass http://main_api_cluster;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # SSE specific optimizations
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 24h;
            proxy_send_timeout 24h;
            
            # Keep connection sticky for SSE
            ip_hash;
            
            add_header X-Accel-Buffering no;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Content-Type "text/event-stream";
        }

        # STATIC ASSETS (CDN Optimized)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            limit_req zone=asset_limit burst=50 nodelay;
            
            # Static file serving
            try_files $uri =404;
            
            # CDN and caching headers
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            add_header X-Content-Type-Options nosniff;
            add_header X-CDN-Ready "true";
            
            # CORS for CDN
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET";
            
            # Compression
            gzip_static on;
        }

        # SPA FALLBACK
        location / {
            try_files $uri $uri/ /index.html;
            
            # SPA caching
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # ERROR PAGES
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /var/www/html;
            internal;
        }
    }
}
