/* Lightweight CSS Neural Network Fallback - Optimized for performance */
.css-neural-network {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 1;
  will-change: auto; /* Let browser optimize */
  contain: layout style paint; /* Performance containment */
}

/* Animated background gradient - Performance optimized */
.css-neural-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at 20% 20%, rgba(0, 255, 204, 0.05) 0%, transparent 50%), /* Reduced opacity for performance */
    radial-gradient(circle at 80% 80%, rgba(0, 123, 255, 0.05) 0%, transparent 50%);
  animation: backgroundPulse 12s ease-in-out infinite; /* Slower animation for performance */
  will-change: opacity; /* Only animate opacity for GPU optimization */
}

@keyframes backgroundPulse {
  0%, 100% { 
    opacity: 0.3;
    transform: scale(1);
  }
  50% { 
    opacity: 0.6;
    transform: scale(1.1);
  }
}

/* Neural nodes container */
.css-neural-nodes {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* Individual neural nodes - Performance optimized */
.css-neural-node {
  position: absolute;
  width: 6px; /* Smaller for better performance */
  height: 6px;
  background: radial-gradient(circle, #00ffcc 0%, rgba(0, 255, 204, 0.15) 70%, transparent 100%); /* Reduced opacity */
  border-radius: 50%;
  left: var(--x);
  top: var(--y);
  transform-origin: center;
  animation: 
    nodeFloat 6s ease-in-out infinite var(--delay), /* Slower animations */
    nodePulse 4s ease-in-out infinite var(--delay);
  box-shadow: 0 0 8px rgba(0, 255, 204, 0.3); /* Simplified shadow for performance */
  will-change: transform, opacity; /* Optimize for these properties */
}

@keyframes nodeFloat {
  0%, 100% {
    transform: translate(-50%, -50%) translateY(0px) scale(1);
  }
  50% {
    transform: translate(-50%, -50%) translateY(-15px) scale(1.2);
  }
}

@keyframes nodePulse {
  0%, 100% {
    opacity: 0.6;
    box-shadow: 
      0 0 10px rgba(0, 255, 204, 0.5),
      0 0 20px rgba(0, 255, 204, 0.2);
  }
  50% {
    opacity: 1;
    box-shadow: 
      0 0 20px rgba(0, 255, 204, 0.8),
      0 0 40px rgba(0, 255, 204, 0.4);
  }
}

/* Neural connections (using pseudo-elements) */
.css-neural-node::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 60px;
  height: 1px;
  background: linear-gradient(90deg, 
    rgba(0, 255, 204, 0.6) 0%, 
    rgba(0, 255, 204, 0.2) 50%, 
    transparent 100%);
  transform-origin: left center;
  transform: translate(-50%, -50%) rotate(calc(var(--delay, 0s) * 360deg / 1s));
  animation: connectionFlow 3s linear infinite var(--delay);
}

.css-neural-node::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 40px;
  height: 1px;
  background: linear-gradient(90deg, 
    transparent 0%, 
    rgba(0, 123, 255, 0.4) 50%, 
    transparent 100%);
  transform-origin: left center;
  transform: translate(-50%, -50%) rotate(calc(var(--delay, 0s) * -180deg / 1s + 45deg));
  animation: connectionFlow 4s linear infinite var(--delay);
}

@keyframes connectionFlow {
  0% {
    opacity: 0;
    transform: translate(-50%, -50%) rotate(0deg) scaleX(0);
  }
  20% {
    opacity: 0.6;
    transform: translate(-50%, -50%) rotate(0deg) scaleX(1);
  }
  80% {
    opacity: 0.6;
    transform: translate(-50%, -50%) rotate(360deg) scaleX(1);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) rotate(360deg) scaleX(0);
  }
}

/* Floating particles */
.css-neural-particles {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.css-neural-particle {
  position: absolute;
  width: 2px;
  height: 2px;
  background: #00ffcc;
  border-radius: 50%;
  left: calc(20% + 60% * var(--random-x, 0.5));
  top: calc(20% + 60% * var(--random-y, 0.5));
  animation: 
    particleFloat var(--duration, 4s) ease-in-out infinite var(--delay),
    particleGlow 2s ease-in-out infinite var(--delay);
}

/* Generate random positions for particles */
.css-neural-particle:nth-child(1) { --random-x: 0.1; --random-y: 0.2; }
.css-neural-particle:nth-child(2) { --random-x: 0.9; --random-y: 0.1; }
.css-neural-particle:nth-child(3) { --random-x: 0.2; --random-y: 0.8; }
.css-neural-particle:nth-child(4) { --random-x: 0.8; --random-y: 0.9; }
.css-neural-particle:nth-child(5) { --random-x: 0.5; --random-y: 0.3; }
.css-neural-particle:nth-child(6) { --random-x: 0.3; --random-y: 0.7; }
.css-neural-particle:nth-child(7) { --random-x: 0.7; --random-y: 0.4; }
.css-neural-particle:nth-child(8) { --random-x: 0.4; --random-y: 0.6; }
.css-neural-particle:nth-child(9) { --random-x: 0.6; --random-y: 0.2; }
.css-neural-particle:nth-child(10) { --random-x: 0.1; --random-y: 0.9; }
.css-neural-particle:nth-child(11) { --random-x: 0.9; --random-y: 0.5; }
.css-neural-particle:nth-child(12) { --random-x: 0.2; --random-y: 0.4; }
.css-neural-particle:nth-child(13) { --random-x: 0.8; --random-y: 0.7; }
.css-neural-particle:nth-child(14) { --random-x: 0.4; --random-y: 0.1; }
.css-neural-particle:nth-child(15) { --random-x: 0.6; --random-y: 0.8; }
.css-neural-particle:nth-child(16) { --random-x: 0.3; --random-y: 0.3; }
.css-neural-particle:nth-child(17) { --random-x: 0.7; --random-y: 0.6; }
.css-neural-particle:nth-child(18) { --random-x: 0.5; --random-y: 0.1; }
.css-neural-particle:nth-child(19) { --random-x: 0.1; --random-y: 0.7; }
.css-neural-particle:nth-child(20) { --random-x: 0.9; --random-y: 0.3; }
.css-neural-particle:nth-child(21) { --random-x: 0.2; --random-y: 0.6; }
.css-neural-particle:nth-child(22) { --random-x: 0.8; --random-y: 0.2; }
.css-neural-particle:nth-child(23) { --random-x: 0.4; --random-y: 0.9; }
.css-neural-particle:nth-child(24) { --random-x: 0.6; --random-y: 0.4; }
.css-neural-particle:nth-child(25) { --random-x: 0.3; --random-y: 0.8; }
.css-neural-particle:nth-child(26) { --random-x: 0.7; --random-y: 0.1; }
.css-neural-particle:nth-child(27) { --random-x: 0.5; --random-y: 0.7; }
.css-neural-particle:nth-child(28) { --random-x: 0.1; --random-y: 0.4; }
.css-neural-particle:nth-child(29) { --random-x: 0.9; --random-y: 0.8; }
.css-neural-particle:nth-child(30) { --random-x: 0.2; --random-y: 0.5; }

@keyframes particleFloat {
  0%, 100% {
    transform: translate(-50%, -50%) translateY(0px) translateX(0px);
    opacity: 0.3;
  }
  25% {
    transform: translate(-50%, -50%) translateY(-20px) translateX(10px);
    opacity: 0.8;
  }
  50% {
    transform: translate(-50%, -50%) translateY(-10px) translateX(-15px);
    opacity: 1;
  }
  75% {
    transform: translate(-50%, -50%) translateY(-25px) translateX(5px);
    opacity: 0.6;
  }
}

@keyframes particleGlow {
  0%, 100% {
    box-shadow: 0 0 4px rgba(0, 255, 204, 0.5);
  }
  50% {
    box-shadow: 0 0 12px rgba(0, 255, 204, 0.8);
  }
}

/* Responsive optimizations */
@media (max-width: 768px) {
  .css-neural-node {
    width: 6px;
    height: 6px;
  }
  
  .css-neural-node::before,
  .css-neural-node::after {
    width: 40px;
  }
  
  .css-neural-particle {
    width: 1.5px;
    height: 1.5px;
  }
}

@media (max-width: 480px) {
  .css-neural-node {
    width: 4px;
    height: 4px;
  }
  
  .css-neural-node::before,
  .css-neural-node::after {
    width: 25px;
  }
  
  .css-neural-particle {
    width: 1px;
    height: 1px;
  }
}

/* Reduce motion for accessibility */
@media (prefers-reduced-motion: reduce) {
  .css-neural-network * {
    animation-duration: 8s !important;
    animation-timing-function: ease !important;
  }
  
  .css-neural-background {
    animation: none;
    opacity: 0.3;
  }
  
  .css-neural-node::before,
  .css-neural-node::after {
    animation: none;
    opacity: 0.3;
  }
} 